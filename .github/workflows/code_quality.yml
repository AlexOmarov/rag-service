name: Code Quality Workflow

on:
  push:
    branches:
      - main

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  UV_CACHE_DIR: ".uv"

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      venv-path: ${{ steps.set-env.outputs.venv-path }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies and UV
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential libsndfile1 git
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Create virtual environment and sync deps
        id: set-env
        shell: bash
        run: |
          uv venv
          source .venv/bin/activate
          uv sync --group=dev --group=test
          uv run hatchling build
          echo "::set-output name=venv-path::.venv"

      - name: Activate venv and run ruff
        shell: bash
        run: |
          source .venv/bin/activate
          ruff format . --check
          ruff check . --output-format=json --output-file=report.json
      - name: Activate venv and run tests
        shell: bash
        run: |
          source .venv/bin/activate
          uv run pytest -s -v src/test/app --cov=src/main/app --cov-report=xml:coverage.xml --cov-report=term

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        args: >
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
